generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model countries {
  id        Int    @id @default(autoincrement())
  name      String
  phonecode String
}

model currencies {
  id              Int                     @id @default(autoincrement())
  coin            String                  @db.VarChar(50)
  coin_decimal    Int                     @default(0)
  symbol          String                  @db.VarChar(10)
  icon            String                  @db.VarChar(15)
  status          currencies_status
  pro_api_id      Int                     @default(1)
  trade_status    Int                     @default(1)
  limit_order     Int                     @default(0)
  pro_trade       Int                     @default(0)
  usdtprice       Decimal                 @db.Decimal(30, 12)
  change_in_price Float                   @db.Float
  chain           String                  @default("") @db.VarChar(25)
  column_name     String                  @default("") @db.VarChar(50)
  table_column    String                  @default("") @db.VarChar(50)
  coin_name       String                  @default("") @db.VarChar(50)
  popular         Int                     @default(0)
  hot             Int                     @default(0)
  withdraw        currencies_withdraw     @default(Inactive)
  deposit         currencies_deposit      @default(Inactive)
  ext_withdraw    currencies_ext_withdraw @default(Inactive)
  bnbchain        String                  @default("") @db.VarChar(30)
  decimal         Int                     @default(6)

  @@index([symbol], map: "symbol")
}

model favoritecurrency {
  id       Int    @id @default(autoincrement())
  currency String
  base     String
  email    String
}

model loginsession {
  id          Int      @id @default(autoincrement())
  email       String   @unique(map: "LoginSession_email_key")
  failedLogin Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model otp {
  id        Int    @id @default(autoincrement())
  email     String
  opt       String
  createdAt String
  expiresAt String
}

model user {
  id         Int     @id @default(autoincrement())
  name       String
  email      String  @unique(map: "User_email_key")
  phone      String
  country    String
  password   String
  token      String?
  isVerified String  @default("false")
  device_id  String?
}

enum currencies_status {
  Active
  Inactive
}

enum currencies_withdraw {
  Active
  Inactive
}

enum currencies_deposit {
  Active
  Inactive
}

enum currencies_ext_withdraw {
  Active
  Inactive
}
